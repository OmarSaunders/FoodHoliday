
FROM python:3.12-slim-bookworm


ENV APP_HOME /app
ENV PYTHONUNBUFFERED 1  #  Don't buffer stdout/stderr, for immediate logs

# Create a non-root user and group for the application to run under.
#   * Security: Running as root is a major security risk.  If an attacker
#     gains access to the container, they'll have root privileges on the host.
#     Creating a dedicated user with minimal privileges is crucial.
RUN groupadd --gid 1000 appuser && \
    useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home appuser

# Switch to the non-root user.  All subsequent commands will run as this user.
USER appuser

# Create the application directory.
#   * Security: Creating the directory *before* copying files ensures correct permissions.
RUN mkdir -p $APP_HOME

# Set the working directory.  This is where the application code will reside.
WORKDIR $APP_HOME

# Copy only the requirements file first to leverage Docker's caching.
COPY requirements.txt $APP_HOME/

# Install application dependencies.

RUN python -m venv venv && \
    . venv/bin/activate && \
    pip install --no-cache-dir -r requirements.txt

# Copy the application code.

COPY app.py $APP_HOME/

# Expose the port the application listens on.

EXPOSE 8000

# Define the command to run the application.
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--user", "appuser", "app:app"]

